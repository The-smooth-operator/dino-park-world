---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      {{- if eq .Values.env "staging" }}
      annotations:
        iam.amazonaws.com/role: {{ .Values.assume_role }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.docker_registry }}/{{ .Values.name }}:{{ .Values.rev }}
          imagePullPolicy: Always
          resources:
            requests:
              memory: 512Mi
            limits:
              memory: 1Gi
          ports:
            - containerPort: 8890
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8890
          env:
            - name: FORCE_UPDATE
              value: "{{ .Values.force_update | default 0 }}"
            - name: ELASTIC_HOST
              value: "{{ .Values.elastic_host }}"
            {{ if eq .Values.env "staging" -}}
            - name: AWS_DEFAULT_REGION
              value: "{{ .Values.aws_region }}"
            - name: AWS_SDK_LOAD_CONFIG
              value: "true"
            - name: AWS_PROFILE
              value: "default"
            {{- end }}
          {{ if eq .Values.env "staging" -}}
          volumeMounts:
            - name: dino-park-elastic
              mountPath: /root/.aws/
          {{- end }}
      {{ if eq .Values.env "staging" -}}
      volumes:
        - name: dino-park-elastic
          secret:
            secretName: dino-park-elastic
      {{- end }}
